<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" ".//reference.RFC.2119.xml">
]>
<!-- WK: Set category, IPR, docName -->
<rfc category="std" docName="draft-wkumari-dnsop-multiple-responses-03"
     ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc iprnotified="no" ?>

  <?rfc strict="yes"?>

  <?rfc compact="yes" ?>

  <front>
    <!-- WK: Set long title. -->

    <title abbrev="DNS Extra Answers">Returning extra answers in DNS
    responses.</title>

    <author fullname="Warren Kumari" initials="W." surname="Kumari">
      <organization>Google</organization>

      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>

          <city>Mountain View, CA</city>

          <code>94043</code>

          <country>US</country>
        </postal>

        <email>warren@kumari.net</email>
      </address>
    </author>

    <author fullname="Zhiwei Yan" initials="Z." surname="Yan">
      <organization>CNNIC</organization>

      <address>
        <postal>
          <street>No.4 South 4th Street, Zhongguancun</street>

          <city>Beijing</city>

          <code>100190</code>

          <country>P. R. China</country>
        </postal>

        <email>yanzhiwei@cnnic.cn</email>
      </address>
    </author>

    <author fullname="Wes Hardaker" initials="W." surname="Hardaker">
      <organization>Parsons, Inc.</organization>

      <address>
        <postal>
          <street>P.O. Box 382</street>

          <city>Davis, CA</city>

          <code>95617</code>

          <country>US</country>
        </postal>

        <email>ietf@hardakers.net</email>
      </address>
    </author>

    <date day="11" month="July" year="2016"/>

    <area>template</area>

    <workgroup>dnsop</workgroup>

    <abstract>
      <t>This document (re)introduces the ability to provide multiple answers
      in a DNS response.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>In many cases a name being resolved in the DNS provides the reason
      behind why the name is being resolved. This may allow the authoritative
      nameserver to predict what other answers a recursive resolver will soon
      query for. By providing multiple answers in the response, the
      authoritative name server operator can assist a caching recursive
      resolver in pre-populating its cache before a stub resolver or other
      client asks for the subsequent queries. Apart from decreasing the
      latency for end users <xref target="RFC6555"/>, this also decreases the
      total number of queries that the recursive resolver needs to send and
      the authoritative server needs to answer.</t>

      <t>For example, the domain name administrator of Example Widgets, Inc
      (example.com) knows that the web page at www.example.com contains
      various other resources, including some images (served from
      images.example.com), some Cascading Style Sheets (served from
      css.example.com) and some JavaScript (served from data.example.com). An
      application attempting to resolve www.example.com is very likely to be a
      web browser rendering the page and will likely also need to resolve all
      of these additional names as well. Providing all of these answers in
      response to a query for www.example.com allows the recursive resolver to
      pre-populate its cache and have these answers available immediately when
      a stub resolver or other DNS client asks for them.</t>

      <t>Other examples where this technique may be useful include SMTP (by
      including mail server addresses, SPF and DKIM records when serving the
      MX record), SRV (by providing the target information in addition to the
      SRV response) and TLSA (by providing any TLSA records associated with a
      name). This same technique can also be used to include both the IPv4 (A)
      and IPv6 (AAAA) addresses for any singular address query.</t>

      <t>This technique, described in this document, is purely an optimization
      and enables a zone publisher to distribute other related answers that
      the client is likely to need along with an answer to the original
      request. Users get a better experience, recursive resolvers need to send
      less queries, authoritative servers have to answer fewer queries,
      etc.</t>

      <t/>

      <section title="Requirements notation">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119"/>.</t>
      </section>
    </section>

    <section title="Background">
      <t>The existing DNS specifications <xref target="RFC1034"/> allow for
      supplemental information to be included in the "additional" section of
      the DNS response, but in order to defeat cache poisoning attacks most
      implementations either ignore or don't trust additional records they
      didn't ask for. For more background, see <xref target="Ref.Bellovin"/>
      and <xref target="RFC2181"/>.</t>

      <t>Not trusting the information in the additional section was necessary
      since there was no way to authenticate it. If a resolver queries for
      www.example.com and received answers for www.invalid.com as well, it is
      impossible for a non-validating resolver to tell if these were actually
      from invalid.com or if an attacker was trying to push bad information
      for invalid.com into the resolver's cache. In a world of ubiquitous
      DNSSEC deployment [Ed note: By the time this document is published,
      there *will* be ubiquitous DNSSEC :-) ], a validating resolver can
      validate, authenticate and trust the records in the additional
      information.</t>
    </section>

    <section title="Terminology">
      <t><list style="hanging">
          <t hangText="Additional records">Additional records are records that
          the authoritative nameserver has included in the Additional
          section.</t>

          <t hangText="EXTRA Resource Record">The EXTRA resource record
          (defined below) carries a list fo additional records to send.</t>

          <t hangText="Primary query">A Primary query (or primary question) is
          a QNAME that the name server operator would like to return
          additional answers for.</t>

          <t hangText="Supporting DNSSEC information">Supporting DNSSEC
          information is the DNSSEC RRSIGs that prove the authenticity of the
          Additional records.</t>

          <t hangText="Stub Resolver">The term "Stub Resolver" is used in this
          document to refer to the most common instance of a DNS client
          sending DNS requests to a Recursive Resolver. However, other DNS
          clients are not excluded from these usages and where we write "Stub
          Resolver" you may read it as "Stub Resolver or other DNS
          client".</t>
        </list></t>
    </section>

    <section title="Returning multiple answers">
      <t>The authoritative nameserver should include as many of the instructed
      additional records identified by the Extra Resource Record and
      Supporting DNSSEC information as will fit in the response packet. These
      additional records (and Supporting DNSSEC information) are appended to
      the additional section of the response.</t>

      <t>In order to include additional records in a response, these
      conditions need to be met:</t>

      <t><list style="numbers">
          <t>Additional records MUST only be included when the Name Server is
          authoritative for the zone, and the records to be returned are
          DNSSEC signed.</t>

          <t>The supporting DNSSEC information necessary to perform validation
          on the records MUST be included.</t>

          <!-- reminder note for Ed's: children records and other
               zones can't be included because they may be regional
               differences between where the authoritative server
               being queried gets different response from the client
               requesting data.  -->

          <t>The Authoritative Name Server SHOULD include as many of the
          additional records as will fit in the response. Additional records
          SHOULD be inserted in the order specified in the Additional records
          list.</t>

          <t>Zone administrators SHOULD only include records identified in the
          EXTRA Resource Records that they expect a client to need.</t>
        </list></t>
    </section>

    <section title="The EXTRA Resource Record">
      <t>To allow a zone content administrator to instruct the name server
      which additional records to serve when it receives a query to a label,
      we introduce the EXTRA Resource Record (RR). These additional records
      are appended to the additional section (note that the EXTRA RR itself is
      not appended). The EXTRA resource record MAY still be queried for
      directly (e.g for debugging), in which case the record itself is
      returned.</t>

      <section title="File Format">
        <t>The format of the EXTRA RR is:</t>

        <t>label EXTRA "label,type; label,type; label,type; ..."</t>

        <t>For example, if the operator of example.com would like to also
        return A record answers for images.example.com, css.html.example.com
        and both an A and AAAA for data.example.com when queried for
        www.example.com, they would create the following record:</t>

        <t>www.example.com. EXTRA "images,A; css,A; data,A; data,AAAA;"</t>

        <t>The entries in the EXTRA list are ordered. An authoritative
        nameserver SHOULD insert the records in the order listed when filling
        the response packet. This is to allow the operator to express a
        preference in case all the records will not fit in the response. The
        TTL of the records added to the Additional section are MUST be the
        same as if queried directly.</t>

        <!-- XXX: needs work: -->

        <t>In some cases a zone content administrator might not know what all
        additional records clients need. For example, the owner of
        www.example.com may have outsourced his DNS operations to a third
        party. DNS administrators may be able to mine their query logs, and
        see that, in a large majority of cases, a recursive server asks for
        foo.example.com and then very soon after asks for bar.example.com, and
        so may decide to optimize this by opportunistically returning bar when
        queried for foo. This functionality could also be included in the
        authoritative name server software itself, but discussions of these
        are outside the scope of this document. <!-- XXX: if they're outside the scope, then this whole
             paragraph is --></t>
      </section>

      <section title="Wire Format">
        <t>The wire format of the EXTRA RR is the same as the wire format for
        a TXT RR:</t>

        <t><figure>
            <artwork><![CDATA[
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    /                   TXT-DATA                    /
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
              ]]></artwork>
          </figure></t>

        <t>Where TXT-DATA is one or more &lt;character-string&gt;s.</t>

        <t>The EXTRA RR has RR type TBD [RFC Editor: insert the IANA assigned
        value and delete this note]</t>
      </section>
    </section>

    <section anchor="signaling" title="Signaling support">
      <t>Recursive Resolvers (or other DNS clients) that support EXTRA records
      MAY signal this by setting the OPT record's EXTRA bit (bit NN [TBD:
      assigned by IANA] in the EDNS0 extension header to 1.</t>
    </section>

    <section title="Stub-Resolver Considerations">
      <t>No modifications need to be made to stub-resolvers to get the
      predominate benefit of this protocol, since the majority of the speed
      gain will take place between the validating recursive resolver and the
      authoritative name server. However, stub resolvers may choose to support
      this technique, and / or may query directly for the EXTRA RR if it wants
      to pre-query for data that will likely be needed in the process of
      supporting its application.</t>
    </section>

    <section title="Use of Additional information">
      <t>When receiving additional records in the additional section, a
      resolver follows certain rules:</t>

      <t><list style="numbers">
          <t>Additional records MUST be validated before being used.</t>

          <t>Additional records SHOULD be annotated in the cache as having
          been received as Additional records.</t>

          <t>Additional records SHOULD have lower priority in the cache than
          answers received because they were requested. This is to help evict
          Additional records from the cache first (to help prevent cache
          filling attacks).</t>

          <t>Recursive resolvers MAY choose to ignore Additional records for
          any reason, including CPU or cache space concerns, phase of the
          moon, etc. It may choose to accept all, some or none of the
          Additional records.</t>
        </list></t>
    </section>

    <section title="IANA Considerations">
      <t>This document contains the following IANA assignment
      requirements:</t>

      <t><list style="numbers">
          <t>The EXTRA bit discussed in <xref target="signaling"/> needs to be
          allocated.</t>
        </list></t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>Additional records will make DNS responses even larger than they are
      currently, leading to larger records that can be used in DNS reflection
      attacks. One could mitigate this by only serving responses to EXTRA
      requests over TCP or when using Cookies <xref target="RFC5395"/>,
      although there is no easy way to signal this to a client other than
      through the use of the truncate bit.</t>

      <t>A malicious authoritative server could include a large number of
      extra records (and associated DNSSEC information) and attempt to DoS the
      recursive by making it do lots of DNSSEC validation. However, this is
      not considered a realistic threat; CPU for validation is cheap compared
      to bandwidth. This can be mitigated by allowing the recursive resolver
      to ignore Additional records whenever it considers itself under attack
      or its CPU resources are otherwise over-committed.</t>

      <t>This specification requires that the all of the Additional records
      are signed, and all necessary DNSSEC information for validation be
      included to avoid cache poisoning attacks.</t>
    </section>

    <section title="Acknowledgements">
      <t>The authors to thank Mark Andrews, Kazunori Fujiwara, Bob Harold,
      John Heidemann, Tony Finch.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.1034' ?>

      <?rfc include='reference.RFC.2119' ?>

      <?rfc include='reference.RFC.2181' ?>

      <?rfc include='reference.RFC.5395' ?>

      <?rfc include='reference.RFC.6555' ?>

      <?rfc include='reference.RFC.7873' ?>

      <reference anchor="Ref.Bellovin"
                 target="https://www.cs.columbia.edu/~smb/papers/dnshack.pdf">
        <front>
          <title abbrev="">Using the Domain Name System for System
          Break-Ins</title>

          <author fullname="Steven M. Bellovin" initials="S."
                  surname="Bellovin">
            <organization/>
          </author>

          <date year="1995"/>
        </front>
      </reference>
    </references>

    <!--
        <references title="Informative References">
        </references>
    -->

    <section title="Changes / Author Notes.">
      <t>[RFC Editor: Please remove this section before publication ]</t>

      <t>From -00 to -01.</t>

      <t><list style="symbols">
          <t>Nothing changed in the template!</t>
        </list>From -02 to -3:<list>
          <t>Sat down and rewrote and cleaned up large sections of text.</t>

          <t>Changed name of RR from Additional to EXTRA (the term
          "Additional" is overloaded in general)</t>

          <t>Clarified that stub resolvers and other clients MAY use this
          specification.</t>

          <t>Attempted to clarify that the individual RRs are added to the
          response, not the EXTRA record itself. The EXTRA RR can be queried
          directly.</t>
        </list></t>
    </section>
  </back>
</rfc>
